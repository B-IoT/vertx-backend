digraph architecture {
  rankdir=LR;
  
  // Storage - #303F9F (dark blue)
  node[fillcolor="#303F9F" style="filled" fontcolor="white"];
  timescale_db[label="TimescaleDB"]; mongo_db[label="MongoDB"];
  
  // Client-side products - #FFEB3B (yellow)
  node[fillcolor="#FFEB3B" style="filled" fontcolor="black"];
  frontend[label="Frontend React App"]; relay[label="Relay"]
  
  // Microservices - #C8E6C9 (light green)
  node[fillcolor="#C8E6C9" style="filled" fontcolor="black"];
  relays_communication_ms[label="Relays communication MS"]; crud_ms[label="CRUD MS"]; analytics_ms[label="Analytics MS"];
  
  // API Gateways - #FFCCBC (light orange)
  node[fillcolor="#FFCCBC" style="filled" fontcolor="black"];
  public_api[label="Public API gateway"];
  
  // 3rd-party tools - #CFD8DC (light grey)
  node[fillcolor="#CFD8DC" style="filled" fontcolor="black"];
  kafka[label="Kafka topics"]; spark[label="Spark"];

  subgraph client_side_apps {
      frontend -> {public_api} [label="HTTP"];
  }
  
  subgraph relays {
      relay -> { relays_communication_ms } [label="MQTT"];
  }
  
  subgraph api_gateways {
      public_api -> {crud_ms, analytics_ms} [label="HTTP"];
  }
  
  subgraph microservices {
      relays_communication_ms -> {relay} [label="MQTT"];
      relays_communication_ms -> {kafka};
      kafka -> {relays_communication_ms, spark, analytics_ms};
      crud_ms -> {mongo_db, timescale_db};
      crud_ms -> {relays_communication_ms} [label="Event bus"];
      spark -> {timescale_db};
      analytics_ms -> {timescale_db};
  }
}